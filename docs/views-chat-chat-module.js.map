{"version":3,"sources":["./src/app/views/chat/chat-contents/chat-contents.component.ts","./src/app/views/chat/chat-contents/chat-contents.component.html","./src/app/views/chat/chat-left-sidebar/chat-left-sidebar.component.ts","./src/app/views/chat/chat-left-sidebar/chat-left-sidebar.component.html","./src/app/views/chat/chat-routing.module.ts","./src/app/views/chat/chat.module.ts","./src/app/views/chat/chat.service.ts","./src/app/views/chat/chat/chat.component.ts","./src/app/views/chat/chat/chat.component.html"],"names":[],"mappings":"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","file":"views-chat-chat-module.js","sourcesContent":["import { Component, OnInit, ViewChild, ViewChildren, Input, OnDestroy } from '@angular/core';\nimport { PerfectScrollbarDirective } from 'ngx-perfect-scrollbar';\nimport { ChatService, ChatCollection, User, Chat } from '../chat.service';\nimport { NgForm } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { SharedAnimations } from 'src/app/shared/animations/shared-animations';\n\n@Component({\n  selector: 'app-chat-contents',\n  templateUrl: './chat-contents.component.html',\n  styleUrls: ['./chat-contents.component.scss'],\n  animations: [SharedAnimations]\n})\nexport class ChatContentsComponent implements OnInit, OnDestroy {\n  user: User = new User();\n  activeContact: User = new User();\n  public chatCollection: ChatCollection;\n\n  userUpdateSub: Subscription;\n  chatUpdateSub: Subscription;\n  chatSelectSub: Subscription;\n\n  @Input('matSidenav') matSidenav;\n  @ViewChild(PerfectScrollbarDirective) psContainer: PerfectScrollbarDirective;\n\n  @ViewChildren('msgInput') msgInput;\n  @ViewChild('msgForm') msgForm: NgForm;\n\n  constructor(public chatService: ChatService) {}\n\n  ngOnInit() {\n    // Listen for user update\n    this.userUpdateSub = this.chatService.onUserUpdated.subscribe(user => {\n      console.log(user);\n      this.user = user;\n    });\n\n    // Listen for contact change\n    this.chatSelectSub = this.chatService.onChatSelected.subscribe(res => {\n      if (res) {\n        this.chatCollection = res.chatCollection;\n        this.activeContact = res.contact;\n        this.initMsgForm();\n      }\n    });\n\n    // Listen for chat update\n    this.chatUpdateSub = this.chatService.onChatsUpdated.subscribe(chat => {\n      this.chatCollection.chats.push(chat);\n      this.scrollToBottom();\n    });\n  }\n\n  ngOnDestroy() {\n    if ( this.userUpdateSub ) { this.userUpdateSub.unsubscribe(); }\n    if ( this.chatSelectSub ) { this.chatSelectSub.unsubscribe(); }\n    if ( this.chatUpdateSub ) { this.chatUpdateSub.unsubscribe(); }\n  }\n\n  sendMessage(e) {\n    const chat: Chat = {\n      contactId: this.chatService.user.id,\n      text: this.msgForm.form.value.message,\n      time: new Date().toISOString()\n    };\n\n    this.chatCollection.chats.push(chat);\n    this.chatService\n      .updateChats(this.chatCollection.id, [...this.chatCollection.chats])\n      .subscribe(res => {\n        this.initMsgForm();\n      });\n\n    // Only for demo purpose\n    this.chatService.autoReply({\n      contactId: this.activeContact.id,\n      text: `Hi, I\\'m ${this.activeContact.name}. Your imaginary friend.`,\n      time: new Date().toISOString()\n    });\n\n  }\n\n  initMsgForm() {\n    setTimeout(() => {\n      this.msgForm.reset();\n      this.msgInput.first.nativeElement.focus();\n      this.scrollToBottom();\n    });\n  }\n\n  scrollToBottom() {\n    setTimeout(() => {\n      this.psContainer.update();\n      this.psContainer.scrollToBottom(0, 400);\n    });\n  }\n}\n","<div>\n  <div class=\"d-flex pl-3 pr-3 pt-2 pb-2 o-hidden box-shadow-1 chat-topbar\">\n      <a appSidebarToggler=\"chat-sidebar\" class=\"link-icon d-md-none\">\n        <i class=\"icon-regular i-Right ml-0 mr-3\"></i> \n      </a>\n      <div class=\"d-flex align-items-center\" *ngIf=\"activeContact?.id\">\n      <img [src]=\"activeContact?.avatar\" \n      [alt]=\"activeContact?.name\" \n      class=\"avatar-sm rounded-circle mr-2\">\n      <p class=\"m-0 text-title text-16 flex-grow-1\">{{activeContact?.name}}</p>\n    </div>\n  </div>\n\n  <div [perfectScrollbar]=\"{suppressScrollX: true}\" class=\"chat-content rtl-ps-none\" *ngIf=\"!chatService.loadingCollection && chatCollection\">\n    <div *ngFor=\"let chat of chatCollection?.chats\" class=\"mb-4\">\n\n      <div *ngIf=\"chat.contactId !== activeContact.id\" class=\"d-flex user\">\n        <img [src]=\"user?.avatar\" [alt]=\"user?.name\" class=\"avatar-sm rounded-circle mr-3\">\n        <div class=\"message flex-grow-1\">\n          <div class=\"d-flex\">\n            <p class=\"mb-1 text-title text-16 flex-grow-1\">{{user?.name}}</p>\n            <span class=\"text-small text-muted\">{{chat.time | date}}</span>\n          </div>\n          <p class=\"m-0\">{{chat.text}}</p>\n        </div>\n      </div>\n      <div *ngIf=\"chat.contactId === activeContact.id\" class=\"d-flex\">\n        <div class=\"message flex-grow-1\">\n            <div class=\"d-flex\">\n              <p class=\"mb-1 text-title text-16 flex-grow-1\">{{activeContact?.name}}</p>\n              <span class=\"text-small text-muted\">{{chat.time | date}}</span>\n            </div>\n          <p class=\"m-0\">{{chat.text}}</p>\n        </div>\n        <img [src]=\"activeContact?.avatar\" \n        [alt]=\"activeContact?.name\" \n        class=\"avatar-sm rounded-circle ml-3\">\n      </div>\n\n    </div>\n  </div>\n\n  <div class=\"pl-3 pr-3 pt-3 pb-3 box-shadow-1 chat-input-area\" \n  *ngIf=\"chatCollection && !chatService.loadingCollection\">\n    <form #msgForm=\"ngForm\" \n    class=\"inputForm\" \n    (ngSubmit)=\"sendMessage($event)\" \n    (keyup.enter)=\"sendMessage($event)\">\n      <div class=\"form-group\">\n        <textarea class=\"form-control form-control-rounded\" #msgInput\n        ngModel\n        placeholder=\"Type your message\"\n        name=\"message\" id=\"message\" cols=\"30\" rows=\"3\"></textarea>\n      </div>\n      <div class=\"d-flex\">\n        <div class=\"flex-grow-1\"></div>\n        <button class=\"btn btn-icon btn-rounded btn-primary mr-2\">\n          <i class=\"i-Paper-Plane\"></i>\n        </button>\n        <button class=\"btn btn-icon btn-rounded btn-outline-primary\" type=\"button\">\n          <i class=\"i-Add-File\"></i>\n        </button>\n      </div>\n    </form>\n  </div>\n\n  <div class=\"spinner-glow spinner-glow-warning\" \n  *ngIf=\"chatService.loadingCollection\"></div>\n\n  <div class=\"app-inro-circle\" *ngIf=\"!chatCollection && !chatService.loadingCollection\">\n    <div class=\"border rounded-circle big-bubble\"  [@animate]=\"{value:'*',params:{scale:'.2',delay:'400ms', duration: '400ms'}}\">\n      <i class=\"i-Speach-Bubbles\"></i>\n    </div>\n    <p class=\"text-16\" [@animate]=\"{value:'*',params:{y:'120px',delay:'600ms', duration: '400ms'}}\">Select a contact and start chat.</p>\n  </div>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { User, ChatService } from '../chat.service';\n\n@Component({\n  selector: 'app-chat-left-sidebar',\n  templateUrl: './chat-left-sidebar.component.html',\n  styleUrls: ['./chat-left-sidebar.component.scss']\n})\nexport class ChatLeftSidebarComponent implements OnInit {\n\n  userUpdateSub: Subscription;\n  loadDataSub: Subscription;\n\n  isSidenavOpen = true;\n\n  currentUser: User = new User();\n  contacts: any[];\n\n  constructor(private chatService: ChatService) {}\n\n  ngOnInit() {\n    // this.chatService.onChatsUpdated\n    //   .subscribe(updatedChats => {\n    //     this.chats = updatedChats;\n    //   });\n\n    this.userUpdateSub = this.chatService.onUserUpdated\n      .subscribe(updatedUser => {\n        this.currentUser = updatedUser;\n      });\n\n    this.loadDataSub = this.chatService.loadChatData()\n      .subscribe(res => {\n        this.currentUser = this.chatService.user;\n        // this.chats = this.chatService.chats;\n        this.contacts = this.chatService.contacts;\n      });\n  }\n  ngOnDestroy() {\n    if ( this.userUpdateSub ) { this.userUpdateSub.unsubscribe(); }\n    if ( this.loadDataSub ) { this.loadDataSub.unsubscribe(); }\n  }\n\n  getChatByContact(contactId) {\n    this.chatService.getChatByContact(contactId)\n      .subscribe(res => {\n        console.log('from sub', res);\n      }, err => {\n        console.log(err);\n      });\n  }\n}\n","<div class=\"border-right\">\n  <div class=\"pt-2 pb-2 pl-3 pr-3 d-flex align-items-center o-hidden box-shadow-1 chat-topbar\">\n    <a appSidebarToggler=\"chat-sidebar\" class=\"link-icon d-md-none\">\n      <i class=\"icon-regular ml-0 mr-3 i-Left\"></i> \n    </a>\n    <div class=\"form-group m-0 flex-grow-1\">\n      <input type=\"text\" class=\"form-control form-control-rounded\" id=\"search\" placeholder=\"Search contacts\">\n    </div>\n    \n  </div>\n  \n  <div [perfectScrollbar]=\"{suppressScrollX: true}\" class=\"contacts-scrollable rtl-ps-none\">\n    <div class=\"mt-4 pb-2 pl-3 pr-3 font-weight-bold text-muted border-bottom\">Recent</div>\n    <div *ngFor=\"let info of currentUser?.chatInfo; let i = index\" \n    class=\"p-3 d-flex align-items-center contact\"\n    [ngClass]=\"{\n      'border-bottom': i != currentUser?.chatInfo.length - 1, \n      'online': (contacts | getValueByKey:info.contactId:'status') === 'online'\n    }\"\n    (click)=\"getChatByContact(info.contactId)\">\n        <img [src]=\"contacts | getValueByKey:info.contactId:'avatar'\" \n        class=\"avatar-sm rounded-circle mr-3\" alt=\"\">\n        <div>\n            <h6 class=\"m-0\">{{info.contactName}}</h6>\n            <span class=\"text-muted text-small\">{{info.lastChatTime  | date}}</span>\n        </div>\n    </div>\n    <div class=\"mt-3 pb-2 pl-3 pr-3 font-weight-bold text-muted border-bottom\">Contacts</div>\n    <div *ngFor=\"let contact of contacts\" \n    class=\"p-3 d-flex border-bottom align-items-center contact\"\n    [ngClass]=\"{online: contact.status === 'online'}\"\n    (click)=\"getChatByContact(contact.id)\">\n      <img [src]=\"contact.avatar\" alt=\"\" class=\"avatar-sm rounded-circle mr-3\">\n      <h6 class=\"\">{{contact.name}}</h6>\n    </div>\n  </div>\n  \n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ChatComponent } from './chat/chat.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ChatComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ChatRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ChatRoutingModule } from './chat-routing.module';\nimport { ChatComponent } from './chat/chat.component';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { ChatLeftSidebarComponent } from './chat-left-sidebar/chat-left-sidebar.component';\nimport { ChatContentsComponent } from './chat-contents/chat-contents.component';\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\nimport { FormsModule } from '@angular/forms';\nimport { SharedDirectivesModule } from 'src/app/shared/directives/shared-directives.module';\nimport { SharedPipesModule } from 'src/app/shared/pipes/shared-pipes.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedDirectivesModule,\n    SharedPipesModule,\n    FormsModule,\n    PerfectScrollbarModule,\n    ChatRoutingModule\n  ],\n  declarations: [ChatComponent, ChatLeftSidebarComponent, ChatContentsComponent]\n})\nexport class ChatModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, BehaviorSubject, Subject, of, combineLatest } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\n\nexport interface Chat {\n  text: string;\n  time: Date | string;\n  contactId: User['id'];\n}\n\nexport interface ChatCollection {\n  id: string;\n  chats: Chat[];\n}\n\nexport interface UserChatInfo {\n  chatId: ChatCollection['id'];\n  contactId: User['id'];\n  contactName: User['name'];\n  unread: number;\n  lastChatTime: Date | string;\n}\n\nexport class User {\n  id: string;\n  avatar: string;\n  name: string;\n  status: string;\n  chatInfo?: UserChatInfo[];\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChatService {\n  public contacts: User[];\n  public chats: ChatCollection[];\n  public user: User;\n\n  onContactSelected = new BehaviorSubject<any>(null);\n  onUserUpdated = new Subject<User>();\n\n  onChatSelected = new BehaviorSubject<any>(null);\n  onChatsUpdated = new Subject<any>();\n  loadingCollection: boolean;\n\n  constructor(private http: HttpClient) {\n\n  }\n\n  loadChatData(): Observable<any> {\n    return combineLatest(\n      this.getAllContacts(),\n      this.getAllChats(),\n      this.getCurrentUser(),\n      (contacts, chats, user) => {\n        this.contacts = contacts;\n        this.chats = chats;\n        this.user = user;\n        // console.log('next.willCall')\n        this.onUserUpdated.next(user);\n        // console.log('next.called')\n        // console.log(\n        //   \"contacts:\",\n        //   contacts,\n        //   \"\\n chats:\",\n        //   chats,\n        //   \"\\n currUser:\",\n        //   user\n        // );\n      }\n    );\n  }\n  public getChatByContact(contactId): Observable<ChatCollection> {\n    this.loadingCollection = true;\n    const chatInfo = this.user.chatInfo.find(chat => chat.contactId === contactId);\n\n    if (!chatInfo) {\n      return this.createChatCollection(contactId)\n        .pipe(switchMap(chatColl => {\n          return this.getChatByContact(contactId);\n        }));\n    }\n\n    return this.getAllChats()\n      .pipe(switchMap(chats => {\n        const chatCollection = chats.find(chat => chat.id === chatInfo.chatId);\n        const contact = this.contacts.find(\n          contact => contact.id === contactId\n        );\n\n        this.onChatSelected.next({\n          chatCollection: chatCollection,\n          contact: contact\n        });\n        this.loadingCollection = false;\n        return of(chatCollection);\n      }));\n  }\n\n  createChatCollection(contactId) {\n\n    const contact = this.contacts.find(contact => contact.id === contactId);\n    const chatId = (Math.random() * 1000000000).toString();\n\n    const chatCollection: ChatCollection = {\n      id: chatId,\n      chats: []\n    };\n\n    const chatInfo = {\n      chatId: chatId,\n      lastChatTime: new Date(),\n      contactId: contact.id,\n      contactName: contact.name,\n      unread: null\n    };\n\n    return this.http\n      .post('api/chat-collections', {...chatCollection})\n      .pipe(switchMap(updatedChatCollection => {\n\n        this.user.chatInfo.push(chatInfo);\n        return this.updateUser(this.user)\n          .pipe(switchMap((res) => {\n\n            return this.getCurrentUser()\n              .pipe(map(user => {\n                this.user = user;\n                // console.log(user)\n                this.onUserUpdated.next(user);\n              }));\n\n            // return updatedChatCollection\n          }));\n\n      }));\n  }\n\n  getAllContacts(): Observable<User[]> {\n    return this.http.get<User[]>('api/contacts');\n  }\n  getAllChats(): Observable<ChatCollection[]> {\n    return this.http.get<ChatCollection[]>('api/chat-collections');\n  }\n  getCurrentUser(): Observable<User> {\n    return this.http.get<User>('api/chat-user')\n      .pipe(map(res => res[0]));\n  }\n  updateUser(user: User): Observable<User> {\n    return this.http.put<User>(`api/chat-user/${user.id}`, {...user});\n  }\n  updateChats(chatId: string, chats: Chat[]): Observable<ChatCollection> {\n    const chatCollection: ChatCollection = {\n      id: chatId,\n      chats: chats\n    };\n    return this.http.put<ChatCollection>('api/chat-collections', chatCollection);\n  }\n\n  autoReply(chat) {\n    setTimeout(() => {\n      this.onChatsUpdated.next(chat);\n    }, 1500);\n  }\n\n}\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.scss']\n})\nexport class ChatComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div appSidebarContainer class=\"card chat-sidebar-container\">\n  <div appSidebarContent class=\"chat-content-wrap\">\n    <app-chat-contents></app-chat-contents>\n  </div>\n  <div appSidebar=\"chat-sidebar\" class=\"chat-sidebar-wrap\">\n    <app-chat-left-sidebar></app-chat-left-sidebar>\n  </div>\n</div>"],"sourceRoot":"webpack:///"}